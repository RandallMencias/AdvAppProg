Index: Client.fxml
===================================================================
diff --git a/Client.fxml b/Client.fxml
deleted file mode 100644
--- a/Client.fxml	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.layout.AnchorPane?>
-
-<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="433.0" xmlns="http://javafx.com/javafx/18" xmlns:fx="http://javafx.com/fxml/1" fx:controller="ClientController">
-   <children>
-      <Button layoutX="355.0" layoutY="331.0" mnemonicParsing="false" onAction="#sendMessage" text="Enviar" AnchorPane.bottomAnchor="43.666666666666686" AnchorPane.rightAnchor="30.0" />
-      <Label layoutX="26.0" layoutY="40.0" text="Nombre" AnchorPane.leftAnchor="26.0" AnchorPane.topAnchor="40.0" />
-      <TextField fx:id="TFName" layoutX="80.0" layoutY="36.0" prefHeight="25.0" prefWidth="115.0" AnchorPane.leftAnchor="80.0" AnchorPane.topAnchor="36.0" />
-      <TextField fx:id="TFMessage" layoutX="60.0" layoutY="331.0" prefHeight="25.0" prefWidth="265.0" AnchorPane.bottomAnchor="44.0" AnchorPane.leftAnchor="60.0" AnchorPane.rightAnchor="107.66666666666669" />
-      <TextArea fx:id="TAchat" layoutX="60.0" layoutY="90.0" prefHeight="219.0" prefWidth="343.0" AnchorPane.bottomAnchor="91.0" AnchorPane.leftAnchor="60.0" AnchorPane.rightAnchor="29.666666666666686" AnchorPane.topAnchor="90.0" />
-      <Label layoutX="212.0" layoutY="40.0" text="Destinatario" AnchorPane.rightAnchor="157.0" AnchorPane.topAnchor="40.0" />
-      <TextField fx:id="TFReciever" layoutX="287.0" layoutY="36.0" prefHeight="25.0" prefWidth="115.0" AnchorPane.rightAnchor="30.66666666666667" AnchorPane.topAnchor="36.0" />
-   </children>
-</AnchorPane>
Index: ClientController.java
===================================================================
diff --git a/ClientController.java b/ClientController.java
deleted file mode 100644
--- a/ClientController.java	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,67 +0,0 @@
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.TextArea;
-import javafx.scene.control.TextField;
-import java.io.DataOutputStream;
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
-import java.net.*;
-
-public class ClientController implements Runnable{
-    
-    @FXML
-    private TextArea TAchat;
-
-    @FXML
-    private TextField TFMessage;
-
-    @FXML
-    private TextField TFName;
-
-    @FXML
-    private TextField TFReciever;
-
-    //al iniciar, se crea el hilo para recibir datos
-    public ClientController() {
-        Thread newThread = new Thread(this);
-        newThread.start();
-    }
-
-    public void sendMessage(ActionEvent event){
-        //crear socket al presionar el boton
-        try {
-            Socket newSocket = new Socket(InetAddress.getLocalHost(),12345);//crear nuevo socket
-            //Crear objeto usuario con sus datos respectivos
-            User usuario = new User();
-            usuario.setNombre(TFName.getText());
-            usuario.setIp(TFReciever.getText());
-            usuario.setMensaje(TFMessage.getText());
-            //enviar objeto por socket
-            ObjectOutputStream salida = new ObjectOutputStream(newSocket.getOutputStream());
-            salida.writeObject(usuario);
-            newSocket.close();
-        } catch (IOException e) {
-            // TODO Auto-generated catch block
-            System.out.println(e.getMessage());
-        }
-    }
-
-    //Run para que se reciban datos
-    @Override
-    public void run() {
-        try {
-            ServerSocket recibeInfo = new ServerSocket(98765);
-            Socket informacion;
-            User datos = new User();
-            while(true){
-                informacion = recibeInfo.accept();
-                ObjectInputStream datosEntrada = new ObjectInputStream(informacion.getInputStream());
-                datos = (User) datosEntrada.readObject();
-                TAchat.appendText("\n" + datos);
-            }
-        } catch (Exception e) {
-            System.out.println(e.getMessage());
-        }
-    }
-}
Index: ClientRun.java
===================================================================
diff --git a/ClientRun.java b/ClientRun.java
deleted file mode 100644
--- a/ClientRun.java	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,20 +0,0 @@
-import javafx.application.Application;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
-import javafx.stage.Stage;
-
-public class ClientRun extends Application {
-    @Override
-    public void start(Stage stage) throws Exception {
-        Parent root = FXMLLoader.load(getClass().getResource("Client.fxml"));
-        Scene scene = new Scene(root);
-        stage.setTitle("Cliente");
-        stage.setScene(scene);
-        stage.show();
-    }
-
-    public static void main(String[] args) {
-        launch(args);
-    }
-}
\ No newline at end of file
Index: Server.fxml
===================================================================
diff --git a/Server.fxml b/Server.fxml
deleted file mode 100644
--- a/Server.fxml	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.layout.AnchorPane?>
-
-
-<AnchorPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="400.0" prefWidth="320.0" xmlns="http://javafx.com/javafx/18" xmlns:fx="http://javafx.com/fxml/1" fx:controller="ServerController">
-   <children>
-      <TextArea fx:id="TAServer" prefHeight="400.0" prefWidth="321.0" AnchorPane.bottomAnchor="0.0" AnchorPane.leftAnchor="0.0" AnchorPane.rightAnchor="-1.3333333333333144" AnchorPane.topAnchor="0.0" />
-   </children>
-</AnchorPane>
Index: ServerController.java
===================================================================
diff --git a/ServerController.java b/ServerController.java
deleted file mode 100644
--- a/ServerController.java	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,52 +0,0 @@
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.io.ObjectOutputStream;
-import java.net.ServerSocket;
-import java.net.*;
-
-import javafx.fxml.FXML;
-import javafx.scene.control.TextArea;
-
-public class ServerController implements Runnable {
-    @FXML
-    private TextArea TAServer;
-
-    public ServerController() {
-        Thread newThread = new Thread(this);
-        newThread.start();
-    }
-
-    @Override
-    // run para iniciar al crear
-    public void run() {
-
-        try {
-            // crear socket del server
-            ServerSocket servidor = new ServerSocket(12345);
-            User usuario;
-            while (true) {// lazo para que se puedan ingresar multiples palabras
-                // que el socket acepte la conexion
-                Socket socket1 = servidor.accept();
-                ObjectInputStream entrada = new ObjectInputStream(socket1.getInputStream());
-                usuario = (User) entrada.readObject();
-                
-                TAServer.appendText("\n" + usuario);
-                
-                //Enviar Informacion a otro usuario
-                Socket enviar_info = new Socket(usuario.getIp(),98765);
-                ObjectOutputStream salida = new ObjectOutputStream(enviar_info.getOutputStream());
-                salida.writeObject(entrada);
-                
-                //cerrar sockets activos
-                enviar_info.close();
-                socket1.close();
-            }
-
-        } catch (IOException | ClassNotFoundException e) {
-            // TODO Auto-generated catch block
-            e.printStackTrace();
-        }
-
-    }
-
-}
Index: ServerRun.java
===================================================================
diff --git a/ServerRun.java b/ServerRun.java
deleted file mode 100644
--- a/ServerRun.java	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,20 +0,0 @@
-import javafx.application.Application;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
-import javafx.stage.Stage;
-
-public class ServerRun extends Application {
-    @Override
-    public void start(Stage stage) throws Exception {
-        Parent root = FXMLLoader.load(getClass().getResource("Server.fxml"));
-        Scene scene = new Scene(root);
-        stage.setTitle("Server");
-        stage.setScene(scene);
-        stage.show();
-    }
-
-    public static void main(String[] args) {
-        launch(args);
-    }
-}
\ No newline at end of file
Index: User.java
===================================================================
diff --git a/User.java b/User.java
deleted file mode 100644
--- a/User.java	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
+++ /dev/null	(revision 9de06aee5ee7cefd4fea739a5ab31ebfdc16056f)
@@ -1,33 +0,0 @@
-import java.io.Serializable;
-
-public class User implements Serializable{
-    private String nombre;
-    private String ip;
-    private String mensaje;
-    public User(){
-    }
-    public String getNombre() {
-        return nombre;
-        
-    }
-    public void setNombre(String nombre) {
-        this.nombre = nombre;
-    }
-    public String getIp() {
-        return ip;
-    }
-    public void setIp(String ip) {
-        this.ip = ip;
-    }
-    public String getMensaje() {
-        return mensaje;
-    }
-    public void setMensaje(String mensaje) {
-        this.mensaje = mensaje;
-    }
-    @Override
-    public String toString() {
-        return getNombre() + ">>>" + getMensaje();//colocar hora
-    }
-    
-}
